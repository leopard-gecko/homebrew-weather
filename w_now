#!/bin/bash
# 現在の天気のスクリプト

# 場所のURL（日本語表記にしたい場合は/en/を/ja/に書き換える）
WEATHER_URL=${WEATHER_URL:='MY_WEATHER_URL'}

# 120分間天気に変化がない時のMINUTECASTの表示（0 変化がなければ表示しない、1 常に表示する）
F_MC=0

# 見出しと天気とMINUTECASTの色（30 黒、31 赤、32 緑、33 黄、34 青、35 マゼンタ、36 シアン、37 白、0 デフォルト、1 強調、2 弱強調、4 下線、5 点滅、7 反転）
COLOR_CP='1'  # 見出し
COLOR_WE='0'  # 天気
COLOR_MC='1'  # MINUITECAST
COLOR_WN='31' # 気象警報

# 使い方
function usage() {
cat <<_EOT_
使い方:
  ${0##*/} [-c | -d | -n | -t | -h] [-l 言語]

説明:
  現在の天気予報

オプション:
  -c    現在の天気を表示       （Current）
  -d    日中の天気を表示       （Day）
  -n    夜間の天気を表示       （Night）
  -t    明日の天気を表示       （Tomorrow）
  -h    ヘルプ
  -l    表示言語
        （ja:日本語、en:English、fr:Français、de:Deutsch、zh-cn:中文 (SIM)など）

_EOT_
exit 1
}

# 引数の設定
while getopts scdnthl: OPT
do
  case $OPT in
    c) FLG_C='true' ;;
    d) FLG_D='true' ;;
    n) FLG_N='true' ;;
    t) FLG_T='true' ;;
    h) usage; exit 1 ;;
    l) LN=$(echo $WEATHER_URL | awk -F'www.accuweather.com' '{print $2}' | awk -F/ '{print $2}')
       WEATHER_URL=${WEATHER_URL/\/$LN\//\/"$OPTARG"\/} ;;
    *) usage; exit 1 ;;
  esac
done

if [ "$FLG_C" != 'true' ] && [ "$FLG_D" != 'true' ] && [ "$FLG_N" != 'true' ] && [ "$FLG_T" != 'true' ]; then
  FLG_C='true'; FLG_D='true'; FLG_N='true'; FLG_T='true'
fi

# データ整理用関数
pickup_day_data() { echo "$1" | grep -m1 $2 | tr '{|}' '\n' | grep -A3 $3 | perl -pe 's/,"/\n/g' | tr -d '"'; }
pickup_d_n_word() { echo "$1" | grep -A7 $2 | grep -m1 $3 | awk -F: '{print $2}'; }
pickup_data() { echo "$1" | grep -m1 $2 | tr '{|}' '\n' | perl -pe 's/,"/\n/g' | tr -d '"'; }
pickup_word() { echo "$1" | grep -m1 $2 | awk -F: '{print $2}'; }
pickup_multi_words() { echo "$1" | grep $2 | awk -F'content:' '{print $2}'; }

# 元データ取得
USER_AGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X)'
WEATHER_DATA=$(curl -A "$USER_AGENT" --silent $WEATHER_URL)
WEATHER_HOUR=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/hourly-weather-forecast})
DATA_CUR="$(pickup_data "$WEATHER_DATA" 'curCon')"
DATA_MC="$(pickup_data "$WEATHER_DATA" 'minuteCastSummary')"
DATA_TODAY="$(pickup_day_data "$WEATHER_DATA" 'dailyForecast' $(date '+%Y-%m-%d'))"
DATA_TOMORROW="$(pickup_day_data "$WEATHER_DATA" 'dailyForecast' $(date -v+1d '+%Y-%m-%d'))"
DATA_LOCALE="$(pickup_data "$WEATHER_DATA" 'pageLocale')""$(pickup_data "$WEATHER_HOUR" 'pageLocale')"
DATA_WN=$(pickup_data "$WEATHER_DATA" 'banners')
LOCALE_PRECIP=$(echo "$WEATHER_HOUR" | grep -m2 -A1 '<div class="precip">' | grep -v '<div class="precip">' | grep -v '\-\-' | tr -d '\t' | perl -C -MEncode -pe 's/&#x([0-9A-F]{4});/chr(hex($1))/ge')

# 現在の温度と天気を取得
if [ "$FLG_C" = 'true' ]; then
  COLUMN="$(echo -e -n "\033[${COLOR_CP}m"$(echo "$DATA_LOCALE" | grep -A2 'CurConPanel:' | grep 'title' | awk -F: '{print $2}')"\033[0m:")""@"
  COLUMN="${COLUMN}$(echo -e $(pickup_word "$DATA_CUR" 'temp')@"\033[${COLOR_WE}m"$(pickup_word "$DATA_CUR" 'phrase')"\033[0m")""\n"
fi

# 日中の最高気温、天気、降水確率を取得
if [ "$FLG_D" = 'true' ]; then
  COLUMN="${COLUMN}$(echo -e -n "\033[${COLOR_CP}m""$(pickup_word "$DATA_LOCALE" 'day:')""\033[0m: ")""@"
  COLUMN="${COLUMN}$(echo -e -n "$(pickup_d_n_word "$DATA_TODAY" 'day:' 'dTemp')$(pickup_word "$DATA_LOCALE" 'high:')@""\033[${COLOR_WE}m""$(pickup_d_n_word "$DATA_TODAY" 'day:' 'phrase')""\033[0m")""@"
  COLUMN="${COLUMN}$(echo -e $(echo $LOCALE_PRECIP):$(pickup_d_n_word "$DATA_TODAY" 'day:' 'precip:'))""\n"
fi

# 夜間の最低気温、天気、降水確率を取得
if [ "$FLG_N" = 'true' ]; then
  COLUMN="${COLUMN}$(echo -e -n "\033[${COLOR_CP}m""$(pickup_word "$DATA_LOCALE" 'night:')""\033[0m: ")""@"
  COLUMN="${COLUMN}$(echo -e -n "$(pickup_d_n_word "$DATA_TODAY" 'night:' 'dTemp')$(pickup_word "$DATA_LOCALE" 'low:')@""\033[${COLOR_WE}m""$(pickup_d_n_word "$DATA_TODAY" 'night' 'phrase')""\033[0m")""@"
  COLUMN="${COLUMN}$(echo -e $(echo $LOCALE_PRECIP):$(pickup_d_n_word "$DATA_TODAY" 'night:' 'precip:'))""\n"
fi

# 明日の最高・最低気温、天気、降水確率を取得
if [ "$FLG_T" = 'true' ]; then
  COLUMN="${COLUMN}$(echo -e -n "\033[${COLOR_CP}m""$(pickup_word "$DATA_LOCALE" 'tomorrow:')""\033[0m: ")""@"
  COLUMN="${COLUMN}$(echo -e -n "$(pickup_d_n_word "$DATA_TOMORROW" 'day:' 'dTemp')/$(pickup_d_n_word "$DATA_TOMORROW" 'night:' 'dTemp')@""\033[${COLOR_WE}m""$(pickup_word "$DATA_TOMORROW" 'phrase')""\033[0m")""@"
  COLUMN="${COLUMN}$(echo -e $(echo $LOCALE_PRECIP):$(pickup_d_n_word "$DATA_TOMORROW" 'day:' 'precip:'))"
fi

# 地名を表示
PLACE=($(pickup_data "$WEATHER_DATA" 'currentLocation' | grep localizedName | awk -F: '{print $2}'))
echo ${PLACE[2]}, ${PLACE[0]}
# 各データを表として表示
echo -e "$COLUMN" | column -t -s"@"
# MINUTECASTを表示
if [ $(pickup_word "$DATA_MC" 'typeId') -ne 0 ] || [ $F_MC -eq 1 ];then
  echo -e "\033[${COLOR_MC}m""$(echo "$DATA_LOCALE" | grep -A2 minutecastHeader | tr -d '\n' | sed -e s/'Location Name'/${PLACE[2]}/ -e 's/.*://' )"": ""\033[0m"$(pickup_word "$DATA_MC" 'phrase')
fi
# Warningを取得して表示
if [ "`echo $DATA_WN | grep content`" ]; then
pickup_multi_words "$DATA_WN" 'content' | sed -E 's/^/'$(printf "\033[0;${COLOR_WN}m")'/' | sed -E 's/$/'$(printf "\033[0m")'/'
fi

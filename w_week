#!/bin/bash
# 週間天気予報のスクリプト

# 場所のURL（日本語表記にしたい場合は/en/を/ja/に書き換える）
WEATHER_URL=${WEATHER_URL:='MY_WEATHER_URL'}

# 何日間？
NUM_L=7
# 何日後から？
AFTER=1

# 日付を表示する？（0 表示しない、1 表示する）
F_DATE=1
# 曜日を表示する？（0 表示しない、1 表示する）
F_DOW=1

# 土曜日と日曜日の色 （30 黒、31 赤、32 緑、33 黄、34 青、35 マゼンタ、36 シアン、37 白、0 デフォルト、1 強調、2 弱強調、4 下線、5 点滅、7 反転）
COLOR_SAT='34;1'
COLOR_SUN='31;1'

# 使い方
function usage() {
cat <<_EOT_
使い方:
  ${0##*/} [-n 数値] [-a 数値] [-e | -h] [-l 言語]

説明:
  週間天気予報

オプション:
  -n    何日分を表示するかの数値
  -a    何日後から表示するかの数値
  -e    週末の予報だけ表示する
  -h    ヘルプ
  -l    表示言語
        （ja:日本語、en:English、fr:Français、de:Deutsch、zh-cn:中文 (SIM)など）

_EOT_
exit 1
}

# 引数の設定
while getopts n:a:ehl: OPT
do
  case $OPT in
    n) [ "$FLAG_E" != 'true' ] && NUM_L="$OPTARG" ;;
    a) [ "$FLAG_E" != 'true' ] && AFTER="$OPTARG" ;;
    e) NUM_L=2;AFTER=$(expr 6 - $(date +%w));FLAG_E='true' ;;
    h) usage ;;
    l) LN=$(echo $WEATHER_URL | awk -F'www.accuweather.com' '{print $2}' | awk -F/ '{print $2}')
       WEATHER_URL=${WEATHER_URL/\/$LN\//\/"$OPTARG"\/} ;;
    *) usage ;;
  esac
done

# データ整理用関数
pickup_data() { echo "$1" | grep -m1 $2 | tr '{|}' '\n' | perl -pe 's/,"/\n/g' | tr -d '"'; }

# 元データ取得（日曜日の場合は翌週の週末を取得する）
USER_AGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X)'
WEATHER_DATA=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/daily-weather-forecast})
DATA_WEEK_RAW=$(echo "$WEATHER_DATA" | grep -A27 'forecast-list-card forecast-card' | perl -C -MEncode -pe 's/&#x([0-9A-F]{2,4});/chr(hex($1))/ge' | tr -d '\t')
_IFS="$IFS";IFS='^'
DATA_WEEK=($(echo "$DATA_WEEK_RAW" | sed s/--/^/g))
IFS="$_IFS"
LOCALE_SAT=$(echo "$DATA_WEEK_RAW" | grep -A5 '<p class="dow">' | grep -B3 $(date -v+$(expr 6 - $(date +%w))d +%m/%d) | sed -n '1p')
LOCALE_SUN=$(echo "$DATA_WEEK_RAW" | grep -A5 '<p class="dow">' | grep -B3 $(date -v+$(expr 7 - $(date +%w))d +%m/%d) | sed -n '1p')
LOCALE_PRECIP=$(echo "$DATA_WEEK_RAW" | grep -A2 '<div class="info precip">' | sed -n '3p')

# 地名を表示
PLACE=($(pickup_data "$WEATHER_DATA" 'currentLocation' | grep localizedName | awk -F: '{print $2}'))
echo ${PLACE[2]}, ${PLACE[0]}
# 日付、曜日、最高・最低気温、降水確率、天気を表示
for (( i = 0; i < $NUM_L; ++i ))
do
  HI[$i]=$(echo "${DATA_WEEK[$(expr $i + $AFTER)]}" | grep '<span class="high">' | sed -e 's/<[^>]*>//g')
  LO[$i]=$(echo "${DATA_WEEK[$(expr $i + $AFTER)]}" | grep '<span class="low">' | sed -e 's/<[^>]*>//g')
  DATE[$i]=$(echo "${DATA_WEEK[$(expr $i + $AFTER)]}" | grep -A1 '<p class="sub">' | grep -v '<p class="sub">')
  DOW[$i]=$(echo "${DATA_WEEK[$(expr $i + $AFTER)]}" | grep -A1 '<p class="dow">' | grep -v '<p class="dow">' | sed -E s/$LOCALE_SAT/$(printf "\033[0;${COLOR_SAT}m")\&/ | sed -E s/$LOCALE_SUN/$(printf "\033[0;${COLOR_SUN}m")\&/ | sed -E 's/$/'$(printf "\033[0m")'/')
  PRECIP[$i]=$(echo "${DATA_WEEK[$(expr $i + $AFTER)]}" | grep -A4 '<div class="info precip">' | sed -n '5p' | sed -e 's/<[^>]*>//g' | awk -F: '{printf "%4s",$1}')
  PHRASE[$i]=$(echo "${DATA_WEEK[$(expr $i + $AFTER)]}" | grep -A1 '<span class="phrase">' | grep -v '<span class="phrase">')
  [ $F_DATE -eq 1 ] && printf "%5s" "${DATE[$i]}"
  [ $F_DOW -eq 1 ] && printf " (%3s)" "${DOW[$i]}"
  printf "%6s%-9s" ${HI[$i]} "${LO[$i]}"
  echo "$LOCALE_PRECIP:${PRECIP[$i]}  ${PHRASE[$i]}"
done

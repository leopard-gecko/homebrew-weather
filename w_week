#!/bin/bash
# 週間天気予報のスクリプト

# 場所のURL（日本語表記にしたい場合は/en/を/ja/に書き換える）
WEATHER_URL=${WEATHER_URL:='MY_WEATHER_URL'}

# 何日間？
NUM_L=7
# 何日後から？
AFTER=1

# 天気の詳細（phrase 簡略表示、longPhrase 詳細表示）
DETAIL=phrase

# 日付を表示する？（0 表示しない、1 表示する）
DATE_B=1
# 曜日を表示する？（0 表示しない、1 簡略表示、2 詳細表示）
DOW=1

[ $DOW -eq 1 ] && MYDOW='dow:'
[ $DOW -eq 2 ] && MYDOW='lDOW:'

# 土曜日と日曜日の色 （30 黒、31 赤、32 緑、33 黄、34 青、35 マゼンタ、36 シアン、37 白、0 デフォルト、1 強調、2 弱強調、4 下線、5 点滅、7 反転）
SAT_COLOR='34;1'
SUN_COLOR='31;1'

# 使い方
function usage() {
cat <<_EOT_
使い方:
  ${0##*/} [-n 数値] [-a 数値] [-e | -h] [-l 言語]

説明:
  週間天気予報

オプション:
  -n    何日分を表示するかの数値
  -a    何日後から表示するかの数値
  -e    週末の予報だけ表示する
  -h    ヘルプ
  -l    表示言語
        （ja:日本語、en:English、fr:Français、de:Deutsch、zh-cn:中文 (SIM)など）

_EOT_
exit 1
}

# 引数の設定
while getopts n:a:ehl: OPT
do
  case $OPT in
    n) [ "$FLAG_E" != 'true' ] && NUM_L="$OPTARG" ;;
    a) [ "$FLAG_E" != 'true' ] && AFTER="$OPTARG" ;;
    e) NUM_L=2;AFTER=$(expr 6 - $(date +%w));FLAG_E='true' ;;
    h) usage ;;
    l) LN=$(echo $WEATHER_URL | awk -F'www.accuweather.com' '{print $2}' | awk -F/ '{print $2}')
       WEATHER_URL=${WEATHER_URL/\/$LN\//\/"$OPTARG"\/} ;;
    *) usage ;;
  esac
done

# データ整理用関数
pickup_day_data() { echo "$1" | grep -m1 $2 | tr '{|}' '\n' | grep -A3 $3 | perl -pe 's/,"/\n/g' | tr -d '"'; }
pickup_d_n_word() { echo "$1" | grep -A7 $2 | grep -m1 $3 | awk -F: '{print $2}'; }
pickup_data() { echo "$1" | grep -m1 $2 | tr '{|}' '\n' | perl -pe 's/,"/\n/g' | tr -d '"'; }
pickup_word() { echo "$1" | grep -m1 $2 | awk -F: '{print $2}'; }

# 元データ取得
USER_AGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X)'
WEATHER_DATA=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL})
WEATHER_DAILY=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/daily-weather-forecast})
for (( i = 0; i < $NUM_L; ++i ))
do
  DATA_WEEK[$i]=$(pickup_day_data "$WEATHER_DATA" 'dailyForecast' $(date -v+$(($AFTER+$i))d '+%Y-%m-%d'))
done
DATA_LOCALE=$(pickup_data "$WEATHER_DAILY" 'pageLocale')
LOCAL_PRECIP=$(pickup_word "$DATA_LOCALE" 'precip:')
LOCALE_SAT=$(pickup_day_data "$WEATHER_DATA" 'dailyForecast' $(date -v+$(expr 6 - $(date +%w))d +%Y-%m-%d) | grep $MYDOW | awk -F: '{print $2}')
LOCALE_SUN=$(pickup_day_data "$WEATHER_DATA" 'dailyForecast' $(date -v+$(expr 7 - $(date +%w))d +%Y-%m-%d) | grep $MYDOW | awk -F: '{print $2}')

# 地名を表示
pickup_data "$WEATHER_DATA" 'currentLocation' | grep localizedName | awk -F: '{print $2}' | tr '\n' ',' | awk -F, '{printf "%s, %s\n",$3,$1}'
# 日付、曜日、最高・最低気温、降水確率、天気を表示
for (( i = 0; i < $NUM_L; ++i ))
do
  hi[$i]=$(echo "${DATA_WEEK[$i]}" | grep -A1 'day:' | grep 'dTemp' | awk -F: '{print $2}')
  lo[$i]=$(echo "${DATA_WEEK[$i]}" | grep -A1 'night:' | grep 'dTemp' | awk -F: '{print $2}')
  [ $DATE_B -eq 1 ] && printf "%5s " "$(echo "${DATA_WEEK[$i]}" | grep 'date:' | awk -F: '{print $2}')"
  [[ $DOW =~ 1|2 ]] && printf "($(echo "${DATA_WEEK[$i]}" | grep -m1 $MYDOW | awk -F: '{print $2}' | sed -E s/$LOCALE_SAT/$(printf "\033[0;${SAT_COLOR}m")\&/ | sed -E s/$LOCALE_SUN/$(printf "\033[0;${SUN_COLOR}m")\&/ | sed -E 's/$/'$(printf "\033[0m")'/')) "
  printf "%5s/%5s " ${hi[$i]} ${lo[$i]}
  echo "${LOCAL_PRECIP}:$(echo "${DATA_WEEK[$i]}" | grep -m1 'precip' | awk -F: '{printf "%4s",$2}')  $(echo "${DATA_WEEK[$i]}" | grep -m1 "$DETAIL" | awk -F: '{print $2}')"
done

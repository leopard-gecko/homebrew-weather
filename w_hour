#!/bin/bash
# 時間単位天気予報のスクリプト

# 場所のURL（日本語表記にしたい場合は/en/を/ja/に書き換える）
WEATHER_URL=${WEATHER_URL:='MY_WEATHER_URL'}

# 何時間分？
NUM_HOUR=25
# 何時間後？
AFTER=0
# 何時間おき？
SKIP=2

# AMとPMの色  30 黒、31 赤、32 緑、33 黄、34 青、35 マゼンタ、36 シアン、37 白、0 デフォルト
COLOR_AM='31'
COLOR_PM='34'

# 使い方
function usage() {
cat <<_EOT_
使い方:
  ${0##*/} [-n 数値] [-a 数値] [-s 数値] [-h] [-l 言語]

説明:
  時間単位の天気予報

オプション:
  -n    何時間分を表示するかの数値
  -a    何時間後から表示するかの数値
  -s    何時間おきに表示するかの数値
  -h    ヘルプ
  -l    表示言語
        （ja:日本語、en:English、fr:Français、de:Deutsch、zh-cn:中文 (SIM)など）

_EOT_
exit 1
}

# 引数の設定
while getopts n:a:s:hl: OPT
do
  case $OPT in
    n) NUM_HOUR="$OPTARG" ;;
    a) AFTER="$OPTARG" ;;
    s) SKIP="$OPTARG" ;;
    h) usage; exit 1 ;;
    l) LN=$(echo $WEATHER_URL | awk -F'www.accuweather.com' '{print $2}' | awk -F/ '{print $2}')
       WEATHER_URL=${WEATHER_URL/\/$LN\//\/"$OPTARG"\/} ;;
    *) usage; exit 1 ;;
  esac
done

# データ整理用関数
pickup_data() { echo "$1" | grep -m1 $2 | tr '{|}' '\n' | perl -pe 's/,"/\n/g' | tr -d '"'; }

# 元データ取得
USER_AGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X)'
WEATHER_DATA0=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/hourly-weather-forecast})
WEATHER_DATA1=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/hourly-weather-forecast}"?day=2")
LOCALE_PRECIP=$(echo "$WEATHER_DATA0" | grep -m2 -A1 '<div class="precip">' | grep -v '<div class="precip">' | grep -v '\-\-' | tr -d '\t' | perl -C -MEncode -pe 's/&#x([0-9A-F]{2,4});/chr(hex($1))/ge')

# 指定された時間分の時刻を取得（後で配列変数として使う。以下同様）
_IFS="$IFS";IFS=$'\n'
HOUR_TIME=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A1 '<div class="date">' | grep '<p>' | sed -e 's/<p>//g' -e 's/<\/p>//g' | tr -d '\t' | perl -C -MEncode -pe 's/&#x([0-9A-F]{2,4});/chr(hex($1))/ge' | sed -n $(expr 1 + $AFTER),$(expr $NUM_HOUR + $AFTER)p))
HOUR_DATE=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A1 '<p class="sub">' | grep -v '<p class="sub">' | grep -v '\-\-' | tr -d '\t' | sed -n $(expr 1 + $AFTER),$(expr $NUM_HOUR + $AFTER)p))
IFS="$_IFS"

# 指定された時間分のデータを取得
_IFS="$IFS";IFS=$'\n'
HOUR_TEMP=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A1 '<div class="temp metric">' | grep -v '<div class="temp metric">' | grep -v '\-\-'| tr -d '\t' | perl -C -MEncode -pe 's/&#x([0-9A-F]{2});/chr(hex($1))/ge' | sed -n $(expr 1 + $AFTER),$(expr $NUM_HOUR + $AFTER)p))
HOUR_PRECIP=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A2 '<div class="precip">' | grep \% | grep -v '\-\-' | tr -d '\t' | sed -n $(expr 1 + $AFTER),$(expr $NUM_HOUR + $AFTER)p))
HOUR_PHRASE=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A1 '<span class="phrase">' | grep -v '<span class="phrase">' | grep -v '\-\-' | tr -d '\t' | perl -C -MEncode -pe 's/&#x([0-9A-F]{2,4});/chr(hex($1))/ge' | sed -n $(expr 1 + $AFTER),$(expr $NUM_HOUR + $AFTER)p))
IFS="$_IFS"

# 地名を表示
PLACE=($(pickup_data "$WEATHER_DATA0" 'currentLocation' | grep localizedName | awk -F: '{print $2}'))
echo ${PLACE[2]}, ${PLACE[0]}
# 時刻と天気を表示
_IFS="$IFS";IFS=$'\n'
for i in $(seq 0 $SKIP $((${#HOUR_TIME[@]}-1)))
do
  printf "%5s " "${HOUR_DATE[$i]}"
  if [ "$(echo $WEATHER_URL | grep '/hi/\|/ar/\|/el/\|/ko/\|/ms/\|/bn/\|/ur/\|/kn/\|/te/\|/mr/\|/pa/\|/zh\|/en/')" ]; then
      printf "%5s  " "${HOUR_TIME[$i]}" | sed -E 's/AM|पूर्वाह्न|π.μ.|오전|PG|পূর্বাহ্|ಪೂರ್ವಾಹ್ನ|म.पू.|ਪੂ.ਦੁ.|上午|ص|قبل دوپہر/'$(printf "\033[0;${COLOR_AM}m")'&'$(printf "\033[0m")'/' | sed -E 's/PM|अपराह्|μ.μ.|오후|PTG|অপরাহ্ণ|ಅಪರಾಹ್ನ|PM|म.उ.|ਬਾ.ਦੁ.|下午|م|بعد دوپہر/'$(printf "\033[0;${COLOR_PM}m")'&'$(printf "\033[0m")'/' | tr -d '\n'
  else
      printf "%5s  " "${HOUR_TIME[$i]}" | perl -pe 's/((?<![0-9])([0-9])(?![0-9])|0[0-9]|1[0-1])/\1'$(printf "\033[0;${COLOR_AM}m")'/' | sed -E 's/(1[2-9]|2[0-3])/&'$(printf "\033[0;${COLOR_PM}m")'/' | sed -E 's/$/'$(printf "\033[0m")'/' | tr -d '\n'
  fi
  echo "${HOUR_TEMP[$i]} ${LOCALE_PRECIP}:$(printf "%4s" "${HOUR_PRECIP[$i]}")  ${HOUR_PHRASE[$i]}"
done
IFS="$_IFS"
